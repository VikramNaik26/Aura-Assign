// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ORGANIZATION
  ADMIN
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  password           String?
  emailVerified      DateTime? @map("email_verified")
  image              String?
  role               UserRole  @default(USER)
  isTwoFactorEnabled Boolean   @default(false)
  createdAt          DateTime  @default(now())

  accounts              Account[]
  userProfiles          UserProfile[]
  enrollments           Enrollment[]
  twoFactorConfirmation TwoFactorConfirmation?
}

model UserProfile {
  id            String    @id @default(cuid())
  userId        String    @unique
  phoneNumber   String?
  dateOfBirth   DateTime?
  gender        String?
  streetAddress String?
  city          String?
  state         String?
  postalCode    String?
  country       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Organization {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          UserRole  @default(ORGANIZATION)
  createdAt     DateTime  @default(now())

  event Event[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

model Enrollment {
  id         String   @id @default(cuid())
  userId     String
  eventId    String
  status     Status   @default(PENDING)
  jobDetails String?
  enrolledAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}

enum PaymentBasis {
  PER_HOUR
  PER_DAY
  PER_WEEK
  PER_MONTH
  PER_YEAR
}

model Event {
  id           String        @id @default(cuid())
  name         String
  description  String?
  payment      Float
  paymentBasis PaymentBasis? @default(PER_DAY)
  imageUrl     String?
  time         DateTime
  date         DateTime
  orgId        String?
  organization Organization? @relation(fields: [orgId], references: [id])
  enrollments  Enrollment[]
  address      String
  latitude     Float
  longitude    Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())

  @@index([orgId])
  @@index([name])
  @@index([address, latitude, longitude])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}
